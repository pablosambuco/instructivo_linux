name: Build Markdown to HTML and PDF

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies (pandoc + xelatex)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-fonts-extra \
            texlive-latex-extra \
            fonts-dejavu \
            lmodern

      - name: Install GitHub CLI
        run: |
          sudo apt-get install -y gh

      - name: Convert Markdown to HTML
        run: |
          pandoc instructivo_linux.md -o instructivo_linux.html

      - name: Convert Markdown to PDF using xelatex
        run: |
          pandoc instructivo_linux.md -o instructivo_linux.pdf \
            --pdf-engine=xelatex \
            -V mainfont="DejaVu Sans"

      - name: Remove existing assets for tag 'latest'
        run: |
          RELEASE_ID=$(gh api repos/${{ github.repository }}/releases/tags/latest --jq '.id')
          for ASSET in instructivo_linux.html instructivo_linux.pdf instructivo_linux.md; do
            ASSET_ID=$(gh api repos/${{ github.repository }}/releases/${RELEASE_ID}/assets --jq ".[] | select(.name == \\"$ASSET\\") | .id")
            if [ ! -z "$ASSET_ID" ]; then
              gh api --method DELETE repos/${{ github.repository }}/releases/assets/${ASSET_ID}
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Última documentación
          body: Versión actualizada
          draft: false
          prerelease: false
          files: |
            instructivo_linux.html
            instructivo_linux.pdf
            instructivo_linux.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}